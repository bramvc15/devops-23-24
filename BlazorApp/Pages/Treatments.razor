@page "/behandelingen"
@using Shared.DTO.CMS;
@using Services.CMS;
@inject TreatmentService treatmentService

<PageTitle>Behandelingen</PageTitle>

<div class="background-div">
    <div class="overlay">
        <h1>Behandelingen</h1>
        <span class="breadcrumbs" data-test-id="behandelingen-home-breadcrumb">
            <BindToLocation />
        </span>
        <input type="text" @bind-value="searchQuery" placeholder="Zoek behandelingen" />
        <div class="container mt-40">
            <div class="row ">
                @if (GetFilteredTreatments() != null)
                {
                    var filteredTreatments = GetFilteredTreatments();
                    foreach (var treatment in filteredTreatments)
                    {
                        <div class="col-md-4 d-flex flex-fill">
                            <TreatmentCard ImageSrc=@treatment.ImageLink Title=@treatment.Name
                                OnCardClick="@( () => NavigateDetailTreatment(treatment.Name) )" />
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Inject] NavigationManager NavigationManager { get; set; }
    private string currentPage = "/behandelingen";

    private string searchQuery = "";

    private void NavigateDetailTreatment(string page)
    {
        NavigationManager.NavigateTo(@currentPage + $"/{page}");
    }

    private IEnumerable<TreatmentDTO> treatments;

    protected override async Task OnInitializedAsync()
    {
        treatments = await treatmentService.GetTreatments();
    }

    IEnumerable<TreatmentDTO>? GetFilteredTreatments()
    {
        if (treatments != null && !string.IsNullOrEmpty(searchQuery))
        {
            return treatments.Where(t => t.Name.ToLower().Contains(searchQuery.ToLower()));
        }
        return treatments;
    }

    void Search()
    {
        StateHasChanged();
    }
}