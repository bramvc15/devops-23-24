@page "/admin/dokters"
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@using System.Text.Json
@using Persistence.Data
@using Services.Core
@using Shared.DTO.Core
@using BlazorApp.Controllers
@inject DatabaseContext databaseContext
@using Microsoft.AspNetCore.Components
@inject DoctorService doctorService
@inject NavigationManager NavManager
@using BlazorApp.Components.Modals
@using Shared.Enums;

@attribute [Authorize(Roles = "Admin")]

<PageTitle>Admin - Doctors</PageTitle>

<SideNavMenu />
<div class="content">
    <div class="info-container">
        <h1>Dokters in het systeem</h1>
        <div class="add-button">
            <AddDoctorPopup />
        </div>
        <div class="alert-container">
            <Alert Color="Color.Danger" @bind-Visible="@visible">
                <AlertDescription>
                    @message
                </AlertDescription>
                <AlertMessage>
                    @* Gebruiken we niet. *@
                </AlertMessage>
                <CloseButton />
            </Alert>
        </div>
        <div class="containerr">
            @if (doctors != null && doctors.Count() > 0)
            {
                <div class="headers">
                    <p>Id</p>
                    <p>Naam</p>
                    <p>Specialisatie</p>
                    <p>Geslacht</p>
                    <p>Biografie</p>
                    <p>IsBeschikbaar</p>
                    <p>Acties</p>
                </div>
                <span class="headLine"></span>
                @foreach (var doctor in doctors)
                {
                    index++;
                    <div class="@((index % 2 == 0) ? "even" : "odd") doc-container">
                        <p>@doctor.Id</p>
                        <p>@doctor.Name</p>
                        <p>@doctor.Specialization</p>
                        <p>@doctor.Gender</p>
                        @if (doctor.Biograph == null)
                        {
                            <p class="noBio">Geen Bio</p>
                        }
                        else
                        {
                            <p class="bio">Hover me
                            <p class="tooltip-text">@doctor.Biograph</p>
                            </p>

                        }
                        @if (doctor.IsAvailable == true)
                        {
                            <p>Ja</p>
                        }
                        else
                        {
                            <p>Nee</p>
                        }
                        <div class="doc-action-con">
                            <button class="edit-btn" @onclick="( () => ShowModal(doctor) )"><Icon Name="IconName.Edit" /></button>
                            <button class="del-btn" @onclick="() => DeleteDoctor(doctor)"><Icon Name="IconName.Delete" /></button>
                        </div>
                    </div>
                    <span class="line"></span>
                }
            }
        </div>
    </div>
</div>

<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Dokter updaten</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Naam</FieldLabel>
                <TextEdit Placeholder="Geef naam..." @bind-Text="newName" />
            </Field>
            <Field>
                <FieldLabel>Specialisatie</FieldLabel>
                <TextEdit Placeholder="Geef specialisatie..." @bind-Text="newSpecialization" />
            </Field>
            <Field>
                <FieldLabel>Geslacht</FieldLabel>
                <select @bind="newGender">
                    <option value="Male">Man</option>
                    <option value="Female">Vrouw</option>
                    <option value="Other">Anders</option>
                </select>
            </Field>
            <Field>
                <FieldLabel>Biografie</FieldLabel>
                <TextEdit Placeholder="Geef biografie..." @bind-Text="newBio" />
            </Field>
            <Field>
                <FieldLabel>Beschikbaar?</FieldLabel>
                <input type="checkbox" @bind="newIsAvailable" />
            </Field>
            <Field>
                <FieldLabel>Afbeelding</FieldLabel>
                <TextEdit Placeholder="Geef afbeelding link..." @bind-Text="newImageLink" />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideModal">Sluit</Button>
            <Button Color="Color.Primary" Clicked="@UpdateDoctor">Opslaan</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private bool visible = false;
    private string message = string.Empty;

    private int index = 0;
    private IEnumerable<DoctorDTO> doctors;
    private DoctorDTO clickedDoctor;

    protected override async Task OnInitializedAsync()
    {
        doctors = await doctorService.GetDoctors();
    }

    int? id;
    string? newName;
    string newEmail;
    string? newSpecialization;
    Gender newGender;
    string? newBio;
    bool newIsAvailable;
    string? newImageLink;
    protected bool readOnly;

    private Modal? modalRef;

    private async Task<Task?> ShowModal(DoctorDTO doctor)
    {
        clickedDoctor = doctor;
        id = doctor.Id;
        newName = doctor.Name;
        newSpecialization = doctor.Specialization;
        newGender = doctor.Gender;
        newBio = doctor.Biograph;
        newIsAvailable = doctor.IsAvailable;
        newImageLink = doctor.ImageLink;
        return modalRef?.Show();
    }

    private Task? HideModal()
    {
        return modalRef?.Hide();
    }

    private async void UpdateDoctor()
    {
        visible = false;
        message = string.Empty;

        var authenticationState = await authenticationStateTask;

        if (authenticationState.User.IsInRole("Admin"))
        {
            try
            {
                DoctorDTO doctor = new()
                {
                    Id = clickedDoctor.Id,
                    Name = newName,
                    Specialization = newSpecialization,
                    Gender = newGender,
                    Biograph = newBio,
                    IsAvailable = newIsAvailable,
                    ImageLink = newImageLink,
                };
                await doctorService.UpdateDoctor(doctor);

                // token puur voor testing
                var token = "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IklwSGhudDJDMFhiU3FqSnFRSWgtRCJ9.eyJpc3MiOiJodHRwczovL3Zpc2lvbi1vb2djZW50cnVtLmV1LmF1dGgwLmNvbS8iLCJzdWIiOiJmaUxFbU5ubzhucnZtZ21HaWZwYk1UM3F2VlFicGlGYUBjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly92aXNpb24tb29nY2VudHJ1bS5ldS5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTcwMzE2ODI0NiwiZXhwIjoxNzA1NzYwMjQ2LCJhenAiOiJmaUxFbU5ubzhucnZtZ21HaWZwYk1UM3F2VlFicGlGYSIsInNjb3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkYXRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgcmVhZDp1c2VyX2N1c3RvbV9ibG9ja3MgY3JlYXRlOnVzZXJfY3VzdG9tX2Jsb2NrcyBkZWxldGU6dXNlcl9jdXN0b21fYmxvY2tzIGNyZWF0ZTp1c2VyX3RpY2tldHMgcmVhZDpjbGllbnRzIHVwZGF0ZTpjbGllbnRzIGRlbGV0ZTpjbGllbnRzIGNyZWF0ZTpjbGllbnRzIHJlYWQ6Y2xpZW50X2tleXMgdXBkYXRlOmNsaWVudF9rZXlzIGRlbGV0ZTpjbGllbnRfa2V5cyBjcmVhdGU6Y2xpZW50X2tleXMgcmVhZDpjb25uZWN0aW9ucyB1cGRhdGU6Y29ubmVjdGlvbnMgZGVsZXRlOmNvbm5lY3Rpb25zIGNyZWF0ZTpjb25uZWN0aW9ucyByZWFkOnJlc291cmNlX3NlcnZlcnMgdXBkYXRlOnJlc291cmNlX3NlcnZlcnMgZGVsZXRlOnJlc291cmNlX3NlcnZlcnMgY3JlYXRlOnJlc291cmNlX3NlcnZlcnMgcmVhZDpkZXZpY2VfY3JlZGVudGlhbHMgdXBkYXRlOmRldmljZV9jcmVkZW50aWFscyBkZWxldGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGNyZWF0ZTpkZXZpY2VfY3JlZGVudGlhbHMgcmVhZDpydWxlcyB1cGRhdGU6cnVsZXMgZGVsZXRlOnJ1bGVzIGNyZWF0ZTpydWxlcyByZWFkOnJ1bGVzX2NvbmZpZ3MgdXBkYXRlOnJ1bGVzX2NvbmZpZ3MgZGVsZXRlOnJ1bGVzX2NvbmZpZ3MgcmVhZDpob29rcyB1cGRhdGU6aG9va3MgZGVsZXRlOmhvb2tzIGNyZWF0ZTpob29rcyByZWFkOmFjdGlvbnMgdXBkYXRlOmFjdGlvbnMgZGVsZXRlOmFjdGlvbnMgY3JlYXRlOmFjdGlvbnMgcmVhZDplbWFpbF9wcm92aWRlciB1cGRhdGU6ZW1haWxfcHJvdmlkZXIgZGVsZXRlOmVtYWlsX3Byb3ZpZGVyIGNyZWF0ZTplbWFpbF9wcm92aWRlciBibGFja2xpc3Q6dG9rZW5zIHJlYWQ6c3RhdHMgcmVhZDppbnNpZ2h0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOmxvZ3NfdXNlcnMgcmVhZDpzaGllbGRzIGNyZWF0ZTpzaGllbGRzIHVwZGF0ZTpzaGllbGRzIGRlbGV0ZTpzaGllbGRzIHJlYWQ6YW5vbWFseV9ibG9ja3MgZGVsZXRlOmFub21hbHlfYmxvY2tzIHVwZGF0ZTp0cmlnZ2VycyByZWFkOnRyaWdnZXJzIHJlYWQ6Z3JhbnRzIGRlbGV0ZTpncmFudHMgcmVhZDpndWFyZGlhbl9mYWN0b3JzIHVwZGF0ZTpndWFyZGlhbl9mYWN0b3JzIHJlYWQ6Z3VhcmRpYW5fZW5yb2xsbWVudHMgZGVsZXRlOmd1YXJkaWFuX2Vucm9sbG1lbnRzIGNyZWF0ZTpndWFyZGlhbl9lbnJvbGxtZW50X3RpY2tldHMgcmVhZDp1c2VyX2lkcF90b2tlbnMgY3JlYXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgZGVsZXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgcmVhZDpjdXN0b21fZG9tYWlucyBkZWxldGU6Y3VzdG9tX2RvbWFpbnMgY3JlYXRlOmN1c3RvbV9kb21haW5zIHVwZGF0ZTpjdXN0b21fZG9tYWlucyByZWFkOmVtYWlsX3RlbXBsYXRlcyBjcmVhdGU6ZW1haWxfdGVtcGxhdGVzIHVwZGF0ZTplbWFpbF90ZW1wbGF0ZXMgcmVhZDptZmFfcG9saWNpZXMgdXBkYXRlOm1mYV9wb2xpY2llcyByZWFkOnJvbGVzIGNyZWF0ZTpyb2xlcyBkZWxldGU6cm9sZXMgdXBkYXRlOnJvbGVzIHJlYWQ6cHJvbXB0cyB1cGRhdGU6cHJvbXB0cyByZWFkOmJyYW5kaW5nIHVwZGF0ZTpicmFuZGluZyBkZWxldGU6YnJhbmRpbmcgcmVhZDpsb2dfc3RyZWFtcyBjcmVhdGU6bG9nX3N0cmVhbXMgZGVsZXRlOmxvZ19zdHJlYW1zIHVwZGF0ZTpsb2dfc3RyZWFtcyBjcmVhdGU6c2lnbmluZ19rZXlzIHJlYWQ6c2lnbmluZ19rZXlzIHVwZGF0ZTpzaWduaW5nX2tleXMgcmVhZDpsaW1pdHMgdXBkYXRlOmxpbWl0cyBjcmVhdGU6cm9sZV9tZW1iZXJzIHJlYWQ6cm9sZV9tZW1iZXJzIGRlbGV0ZTpyb2xlX21lbWJlcnMgcmVhZDplbnRpdGxlbWVudHMgcmVhZDphdHRhY2tfcHJvdGVjdGlvbiB1cGRhdGU6YXR0YWNrX3Byb3RlY3Rpb24gcmVhZDpvcmdhbml6YXRpb25zX3N1bW1hcnkgY3JlYXRlOmF1dGhlbnRpY2F0aW9uX21ldGhvZHMgcmVhZDphdXRoZW50aWNhdGlvbl9tZXRob2RzIHVwZGF0ZTphdXRoZW50aWNhdGlvbl9tZXRob2RzIGRlbGV0ZTphdXRoZW50aWNhdGlvbl9tZXRob2RzIHJlYWQ6b3JnYW5pemF0aW9ucyB1cGRhdGU6b3JnYW5pemF0aW9ucyBjcmVhdGU6b3JnYW5pemF0aW9ucyBkZWxldGU6b3JnYW5pemF0aW9ucyBjcmVhdGU6b3JnYW5pemF0aW9uX21lbWJlcnMgcmVhZDpvcmdhbml6YXRpb25fbWVtYmVycyBkZWxldGU6b3JnYW5pemF0aW9uX21lbWJlcnMgY3JlYXRlOm9yZ2FuaXphdGlvbl9jb25uZWN0aW9ucyByZWFkOm9yZ2FuaXphdGlvbl9jb25uZWN0aW9ucyB1cGRhdGU6b3JnYW5pemF0aW9uX2Nvbm5lY3Rpb25zIGRlbGV0ZTpvcmdhbml6YXRpb25fY29ubmVjdGlvbnMgY3JlYXRlOm9yZ2FuaXphdGlvbl9tZW1iZXJfcm9sZXMgcmVhZDpvcmdhbml6YXRpb25fbWVtYmVyX3JvbGVzIGRlbGV0ZTpvcmdhbml6YXRpb25fbWVtYmVyX3JvbGVzIGNyZWF0ZTpvcmdhbml6YXRpb25faW52aXRhdGlvbnMgcmVhZDpvcmdhbml6YXRpb25faW52aXRhdGlvbnMgZGVsZXRlOm9yZ2FuaXphdGlvbl9pbnZpdGF0aW9ucyBkZWxldGU6cGhvbmVfcHJvdmlkZXJzIGNyZWF0ZTpwaG9uZV9wcm92aWRlcnMgcmVhZDpwaG9uZV9wcm92aWRlcnMgdXBkYXRlOnBob25lX3Byb3ZpZGVycyBkZWxldGU6cGhvbmVfdGVtcGxhdGVzIGNyZWF0ZTpwaG9uZV90ZW1wbGF0ZXMgcmVhZDpwaG9uZV90ZW1wbGF0ZXMgdXBkYXRlOnBob25lX3RlbXBsYXRlcyBjcmVhdGU6ZW5jcnlwdGlvbl9rZXlzIHJlYWQ6ZW5jcnlwdGlvbl9rZXlzIHVwZGF0ZTplbmNyeXB0aW9uX2tleXMgZGVsZXRlOmVuY3J5cHRpb25fa2V5cyByZWFkOmNsaWVudF9jcmVkZW50aWFscyBjcmVhdGU6Y2xpZW50X2NyZWRlbnRpYWxzIHVwZGF0ZTpjbGllbnRfY3JlZGVudGlhbHMgZGVsZXRlOmNsaWVudF9jcmVkZW50aWFscyIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyJ9.qA-MF9w_5_UYe0fMbgp3xOJAqXTM6sUqY-af6HSUa332_N37hpcS9GgWuExopTVnaLiXy_Ze8m6PXIqbWqoZZQykxG79_K0iSccOpxDy7KX1l_W14MKFc1noSQVWDxu8sMm8y5pt7_kaC5RQmz-d9LDYLT4k_UL825FBBIIuQjgIKt3yWuMyZsf98vtaVQJuPt80D5nvZMYn4dvYLv5bwBk3a8IapyWepBipSL8o7UXt_S56zT_xt9Pq2h5P0grQH-yURfrTOWQCjDbj_k7dhMd5uj5M0Ou-xjqYO4ktlmfMhXpZ5ye1OSvOcwBNf9ioa2HgZPuAovU0Wy8NGPfvuA";
                var client = new HttpClient();
                var request = new HttpRequestMessage(HttpMethod.Patch, $"https://vision-oogcentrum.eu.auth0.com/api/v2/users/{clickedDoctor.Auth0Id}");
                request.Headers.Add("Accept", "application/json");
                request.Headers.Add("Authorization", $"Bearer {token}");
                var content = new StringContent(
                    $"{{\"connection\":\"Username-Password-Authentication\",\"username\":\"{newName}\"}}",
                    null,
                    "application/json");
                request.Content = content;
                var response = await client.SendAsync(request);

                if (response.IsSuccessStatusCode)
                {

                    Console.WriteLine("Success: User updated!!!!!!!!");
                }
                else
                {
                    Console.WriteLine($"Error 1: {response.StatusCode} - {await response.Content.ReadAsStringAsync()}");
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
        else
        {
            message = "U heeft geen toegang tot bewerken.";
            visible = true;
        }

        await HideModal();
    }

    private async void DeleteDoctor(DoctorDTO p)
    {
        visible = false;
        message = string.Empty;

        var authenticationState = await authenticationStateTask;

        if (authenticationState.User.IsInRole("Admin"))
        {
            try
            {
                await doctorService.DeleteDoctor(p);

                // token puur voor testing
                var token = "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IklwSGhudDJDMFhiU3FqSnFRSWgtRCJ9.eyJpc3MiOiJodHRwczovL3Zpc2lvbi1vb2djZW50cnVtLmV1LmF1dGgwLmNvbS8iLCJzdWIiOiJmaUxFbU5ubzhucnZtZ21HaWZwYk1UM3F2VlFicGlGYUBjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly92aXNpb24tb29nY2VudHJ1bS5ldS5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTcwMzE2ODI0NiwiZXhwIjoxNzA1NzYwMjQ2LCJhenAiOiJmaUxFbU5ubzhucnZtZ21HaWZwYk1UM3F2VlFicGlGYSIsInNjb3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkYXRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgcmVhZDp1c2VyX2N1c3RvbV9ibG9ja3MgY3JlYXRlOnVzZXJfY3VzdG9tX2Jsb2NrcyBkZWxldGU6dXNlcl9jdXN0b21fYmxvY2tzIGNyZWF0ZTp1c2VyX3RpY2tldHMgcmVhZDpjbGllbnRzIHVwZGF0ZTpjbGllbnRzIGRlbGV0ZTpjbGllbnRzIGNyZWF0ZTpjbGllbnRzIHJlYWQ6Y2xpZW50X2tleXMgdXBkYXRlOmNsaWVudF9rZXlzIGRlbGV0ZTpjbGllbnRfa2V5cyBjcmVhdGU6Y2xpZW50X2tleXMgcmVhZDpjb25uZWN0aW9ucyB1cGRhdGU6Y29ubmVjdGlvbnMgZGVsZXRlOmNvbm5lY3Rpb25zIGNyZWF0ZTpjb25uZWN0aW9ucyByZWFkOnJlc291cmNlX3NlcnZlcnMgdXBkYXRlOnJlc291cmNlX3NlcnZlcnMgZGVsZXRlOnJlc291cmNlX3NlcnZlcnMgY3JlYXRlOnJlc291cmNlX3NlcnZlcnMgcmVhZDpkZXZpY2VfY3JlZGVudGlhbHMgdXBkYXRlOmRldmljZV9jcmVkZW50aWFscyBkZWxldGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGNyZWF0ZTpkZXZpY2VfY3JlZGVudGlhbHMgcmVhZDpydWxlcyB1cGRhdGU6cnVsZXMgZGVsZXRlOnJ1bGVzIGNyZWF0ZTpydWxlcyByZWFkOnJ1bGVzX2NvbmZpZ3MgdXBkYXRlOnJ1bGVzX2NvbmZpZ3MgZGVsZXRlOnJ1bGVzX2NvbmZpZ3MgcmVhZDpob29rcyB1cGRhdGU6aG9va3MgZGVsZXRlOmhvb2tzIGNyZWF0ZTpob29rcyByZWFkOmFjdGlvbnMgdXBkYXRlOmFjdGlvbnMgZGVsZXRlOmFjdGlvbnMgY3JlYXRlOmFjdGlvbnMgcmVhZDplbWFpbF9wcm92aWRlciB1cGRhdGU6ZW1haWxfcHJvdmlkZXIgZGVsZXRlOmVtYWlsX3Byb3ZpZGVyIGNyZWF0ZTplbWFpbF9wcm92aWRlciBibGFja2xpc3Q6dG9rZW5zIHJlYWQ6c3RhdHMgcmVhZDppbnNpZ2h0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOmxvZ3NfdXNlcnMgcmVhZDpzaGllbGRzIGNyZWF0ZTpzaGllbGRzIHVwZGF0ZTpzaGllbGRzIGRlbGV0ZTpzaGllbGRzIHJlYWQ6YW5vbWFseV9ibG9ja3MgZGVsZXRlOmFub21hbHlfYmxvY2tzIHVwZGF0ZTp0cmlnZ2VycyByZWFkOnRyaWdnZXJzIHJlYWQ6Z3JhbnRzIGRlbGV0ZTpncmFudHMgcmVhZDpndWFyZGlhbl9mYWN0b3JzIHVwZGF0ZTpndWFyZGlhbl9mYWN0b3JzIHJlYWQ6Z3VhcmRpYW5fZW5yb2xsbWVudHMgZGVsZXRlOmd1YXJkaWFuX2Vucm9sbG1lbnRzIGNyZWF0ZTpndWFyZGlhbl9lbnJvbGxtZW50X3RpY2tldHMgcmVhZDp1c2VyX2lkcF90b2tlbnMgY3JlYXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgZGVsZXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgcmVhZDpjdXN0b21fZG9tYWlucyBkZWxldGU6Y3VzdG9tX2RvbWFpbnMgY3JlYXRlOmN1c3RvbV9kb21haW5zIHVwZGF0ZTpjdXN0b21fZG9tYWlucyByZWFkOmVtYWlsX3RlbXBsYXRlcyBjcmVhdGU6ZW1haWxfdGVtcGxhdGVzIHVwZGF0ZTplbWFpbF90ZW1wbGF0ZXMgcmVhZDptZmFfcG9saWNpZXMgdXBkYXRlOm1mYV9wb2xpY2llcyByZWFkOnJvbGVzIGNyZWF0ZTpyb2xlcyBkZWxldGU6cm9sZXMgdXBkYXRlOnJvbGVzIHJlYWQ6cHJvbXB0cyB1cGRhdGU6cHJvbXB0cyByZWFkOmJyYW5kaW5nIHVwZGF0ZTpicmFuZGluZyBkZWxldGU6YnJhbmRpbmcgcmVhZDpsb2dfc3RyZWFtcyBjcmVhdGU6bG9nX3N0cmVhbXMgZGVsZXRlOmxvZ19zdHJlYW1zIHVwZGF0ZTpsb2dfc3RyZWFtcyBjcmVhdGU6c2lnbmluZ19rZXlzIHJlYWQ6c2lnbmluZ19rZXlzIHVwZGF0ZTpzaWduaW5nX2tleXMgcmVhZDpsaW1pdHMgdXBkYXRlOmxpbWl0cyBjcmVhdGU6cm9sZV9tZW1iZXJzIHJlYWQ6cm9sZV9tZW1iZXJzIGRlbGV0ZTpyb2xlX21lbWJlcnMgcmVhZDplbnRpdGxlbWVudHMgcmVhZDphdHRhY2tfcHJvdGVjdGlvbiB1cGRhdGU6YXR0YWNrX3Byb3RlY3Rpb24gcmVhZDpvcmdhbml6YXRpb25zX3N1bW1hcnkgY3JlYXRlOmF1dGhlbnRpY2F0aW9uX21ldGhvZHMgcmVhZDphdXRoZW50aWNhdGlvbl9tZXRob2RzIHVwZGF0ZTphdXRoZW50aWNhdGlvbl9tZXRob2RzIGRlbGV0ZTphdXRoZW50aWNhdGlvbl9tZXRob2RzIHJlYWQ6b3JnYW5pemF0aW9ucyB1cGRhdGU6b3JnYW5pemF0aW9ucyBjcmVhdGU6b3JnYW5pemF0aW9ucyBkZWxldGU6b3JnYW5pemF0aW9ucyBjcmVhdGU6b3JnYW5pemF0aW9uX21lbWJlcnMgcmVhZDpvcmdhbml6YXRpb25fbWVtYmVycyBkZWxldGU6b3JnYW5pemF0aW9uX21lbWJlcnMgY3JlYXRlOm9yZ2FuaXphdGlvbl9jb25uZWN0aW9ucyByZWFkOm9yZ2FuaXphdGlvbl9jb25uZWN0aW9ucyB1cGRhdGU6b3JnYW5pemF0aW9uX2Nvbm5lY3Rpb25zIGRlbGV0ZTpvcmdhbml6YXRpb25fY29ubmVjdGlvbnMgY3JlYXRlOm9yZ2FuaXphdGlvbl9tZW1iZXJfcm9sZXMgcmVhZDpvcmdhbml6YXRpb25fbWVtYmVyX3JvbGVzIGRlbGV0ZTpvcmdhbml6YXRpb25fbWVtYmVyX3JvbGVzIGNyZWF0ZTpvcmdhbml6YXRpb25faW52aXRhdGlvbnMgcmVhZDpvcmdhbml6YXRpb25faW52aXRhdGlvbnMgZGVsZXRlOm9yZ2FuaXphdGlvbl9pbnZpdGF0aW9ucyBkZWxldGU6cGhvbmVfcHJvdmlkZXJzIGNyZWF0ZTpwaG9uZV9wcm92aWRlcnMgcmVhZDpwaG9uZV9wcm92aWRlcnMgdXBkYXRlOnBob25lX3Byb3ZpZGVycyBkZWxldGU6cGhvbmVfdGVtcGxhdGVzIGNyZWF0ZTpwaG9uZV90ZW1wbGF0ZXMgcmVhZDpwaG9uZV90ZW1wbGF0ZXMgdXBkYXRlOnBob25lX3RlbXBsYXRlcyBjcmVhdGU6ZW5jcnlwdGlvbl9rZXlzIHJlYWQ6ZW5jcnlwdGlvbl9rZXlzIHVwZGF0ZTplbmNyeXB0aW9uX2tleXMgZGVsZXRlOmVuY3J5cHRpb25fa2V5cyByZWFkOmNsaWVudF9jcmVkZW50aWFscyBjcmVhdGU6Y2xpZW50X2NyZWRlbnRpYWxzIHVwZGF0ZTpjbGllbnRfY3JlZGVudGlhbHMgZGVsZXRlOmNsaWVudF9jcmVkZW50aWFscyIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyJ9.qA-MF9w_5_UYe0fMbgp3xOJAqXTM6sUqY-af6HSUa332_N37hpcS9GgWuExopTVnaLiXy_Ze8m6PXIqbWqoZZQykxG79_K0iSccOpxDy7KX1l_W14MKFc1noSQVWDxu8sMm8y5pt7_kaC5RQmz-d9LDYLT4k_UL825FBBIIuQjgIKt3yWuMyZsf98vtaVQJuPt80D5nvZMYn4dvYLv5bwBk3a8IapyWepBipSL8o7UXt_S56zT_xt9Pq2h5P0grQH-yURfrTOWQCjDbj_k7dhMd5uj5M0Ou-xjqYO4ktlmfMhXpZ5ye1OSvOcwBNf9ioa2HgZPuAovU0Wy8NGPfvuA";
                var client = new HttpClient();
                var request = new HttpRequestMessage(HttpMethod.Delete, $"https://vision-oogcentrum.eu.auth0.com/api/v2/users/{p.Auth0Id}");
                request.Headers.Add("Authorization", $"Bearer {token}");
                var response = await client.SendAsync(request);

                if (response.IsSuccessStatusCode)
                {

                    Console.WriteLine("Success: User deleted!!!!!!!!");
                }
                else
                {
                    Console.WriteLine($"Error 1: {response.StatusCode} - {await response.Content.ReadAsStringAsync()}");
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
        else
        {
            message = "U heeft geen toegang tot verwijderen.";
            visible = true;
        }
    }
}