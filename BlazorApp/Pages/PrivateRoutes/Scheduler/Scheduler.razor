@page "/admin/scheduler"
@using BlazorApp.Auth
@using BlazorApp.Models
@using BlazorApp.Components.Modals
@using BlazorApp.Services
@inject NavigationManager NavManager
@inject ScheduleTimeSlotService ScheduleTimeSlotService

<div class="sidebar">
    <SideNavMenu />
</div>
<div class="admin container">
    <div>
        @if (!string.IsNullOrEmpty(BlitzWareAuthService.AuthService.userData.Token))
        {
            <br />
            <br />
            <br />
            <br />
            <br />
            <h1>Scheduler</h1>
            <p>Here you can view and edit your schedule.</p>
            <AddScheduleTimeSlotPopUp />
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Monday</th>
                        <th>Tuesday</th>
                        <th>Wednesday</th>
                        <th>Thursday</th>
                        <th>Friday</th>
                        <th>Saturday</th>
                        <th>Sunday</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var listsByDay = new Dictionary<string, List<ScheduleTimeSlot>>
                        {
                            { "Monday", MondayList },
                            { "Tuesday", TuesdayList },
                            { "Wednesday", WednesdayList },
                            { "Thursday", ThursdayList },
                            { "Friday", FridayList },
                            { "Saturday", SaturdayList },
                            { "Sunday", SundayList }
                        };

                        int maxCount = listsByDay.Values.Max(list => list.Count);

                        for (int i = 0; i < maxCount; i++)
                        {
                            <tr>
                                @foreach (var day in listsByDay.Keys)
                                {
                                    var list = listsByDay[day];
                                    <td>
                                        @if (i < list.Count)
                                        {
                                            var endTime = list[i].DateTime;
                                            <div>
                                                <p>@list[i].AppointmentType</p>
                                                <p>@($"{list[i].DateTime.TimeOfDay.ToString("hh\\:mm")} - {endTime.AddMinutes(list[i].Duration).TimeOfDay.ToString("hh\\:mm")}")</p>
                                                <p>@($"{list[i].Duration} minutes")</p>
                                                <br />
                                                <Button Color="Color.Primary" @onclick="() => EditScheduleTimeSlot(list[i].Id)">
                                                    <Icon Name="IconName.Edit" />
                                                </Button>
                                                <Button Color="Color.Danger" @onclick="() => DeleteScheduleTimeSlot(list[i].Id)">
                                                    <Icon Name="IconName.Delete" />
                                                </Button>
                                            </div>
                                        }

                                    </td>
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>You are not authorized to access this page. Please log in.</p>
            <p><a href="/login">Click here to LOGIN.</a></p>
        }
    </div>
</div>

@code {
    [Inject]
    private BlitzWareAuthService BlitzWareAuthService { get; set; }
    private IEnumerable<ScheduleTimeSlot> ListOfScheduleTimeSlots;
    private List<ScheduleTimeSlot> MondayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> TuesdayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> WednesdayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> ThursdayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> FridayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> SaturdayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> SundayList = new List<ScheduleTimeSlot>();

    private async Task EditScheduleTimeSlot(int id)
    {
        Console.WriteLine($"Edit button clicked for ScheduleTimeSlot with Id: {id}");
    }

    private async Task DeleteScheduleTimeSlot(int id)
    {
        Console.WriteLine($"Delete button clicked for ScheduleTimeSlot with Id: {id}");
    }

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(BlitzWareAuthService.AuthService.userData.Token))
        {
            NavManager.NavigateTo("/login");
        }

        ListOfScheduleTimeSlots = await ScheduleTimeSlotService.GetScheduleTimeSlotsByDoctorId(0);

        // Add each time slot to the appropriate list
        foreach (ScheduleTimeSlot scheduleTimeSlot in ListOfScheduleTimeSlots)
        {
            switch (scheduleTimeSlot.DayOfWeek)
            {
                case "Monday":
                    MondayList.Add(scheduleTimeSlot);
                    break;
                case "Tuesday":
                    TuesdayList.Add(scheduleTimeSlot);
                    break;
                case "Wednesday":
                    WednesdayList.Add(scheduleTimeSlot);
                    break;
                case "Thursday":
                    ThursdayList.Add(scheduleTimeSlot);
                    break;
                case "Friday":
                    FridayList.Add(scheduleTimeSlot);
                    break;
                case "Saturday":
                    SaturdayList.Add(scheduleTimeSlot);
                    break;
                case "Sunday":
                    SundayList.Add(scheduleTimeSlot);
                    break;
            }
        }

    }
}