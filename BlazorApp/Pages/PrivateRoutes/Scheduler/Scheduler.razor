@page "/admin/scheduler"
@using BlazorApp.Auth
@using BlazorApp.Models
@using BlazorApp.Components.Modals
@using BlazorApp.Services
@inject NavigationManager NavManager
@inject ScheduleTimeSlotService ScheduleTimeSlotService

<div class="sidebar">
    <SideNavMenu />
</div>
<div class="admin container">
    <div class="row justify-content-center align-items-center" style="height: 100vh;">
        <div class="col-md-6 text-center">
            @if (!string.IsNullOrEmpty(BlitzWareAuthService.AuthService.userData.Token))
            {
                <h1>Scheduler</h1>
                <p>Here you can view and edit your schedule.</p>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Monday</th>
                            <th>Tuesday</th>
                            <th>Wednesday</th>
                            <th>Thursday</th>
                            <th>Friday</th>
                            <th>Saturday</th>
                            <th>Sunday</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var listsByDay = new Dictionary<string, List<ScheduleTimeSlot>>
                            {
                                { "Monday", MondayList },
                                { "Tuesday", TuesdayList },
                                { "Wednesday", WednesdayList },
                                { "Thursday", ThursdayList },
                                { "Friday", FridayList },
                                { "Saturday", SaturdayList },
                                { "Sunday", SundayList }
                            };

                            int maxCount = listsByDay.Values.Max(list => list.Count);

                            for (int i = 0; i < maxCount; i++)
                            {
                                <tr>
                                    @foreach (var day in listsByDay.Keys)
                                    {
                                        var list = listsByDay[day];
                                        var endTime = i < list.Count ? list[i].DateTime : DateTime.Now;
                                        <td>
                                            @(i < list.Count ? list[i].AppointmentType : "")
                                            @(i < list.Count ? $"{list[i].DateTime.TimeOfDay.ToString("hh\\:mm")} - {endTime.AddMinutes(list[i].Duration).TimeOfDay.ToString("hh\\:mm")}" : "")
                                            <br/>
                                            @(i < list.Count ? $"{list[i].Duration} minutes" : "")
                                        </td>
                                    }
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                <AddScheduleTimeSlotPopUp />
            }
            else
            {
                <p>You are not authorized to access this page. Please log in.</p>
                <p><a href="/login">Click here to LOGIN.</a></p>
            }
                    
        </div>
    </div>
</div>

@code {
    [Inject]
    private BlitzWareAuthService BlitzWareAuthService { get; set; }
    private IEnumerable<ScheduleTimeSlot> ListOfScheduleTimeSlots;
    private List<ScheduleTimeSlot> MondayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> TuesdayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> WednesdayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> ThursdayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> FridayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> SaturdayList = new List<ScheduleTimeSlot>();
    private List<ScheduleTimeSlot> SundayList = new List<ScheduleTimeSlot>();

    private void AddScheduleTimeSlot()
    {
        
    }

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(BlitzWareAuthService.AuthService.userData.Token))
        {
            NavManager.NavigateTo("/login");
        }

        ListOfScheduleTimeSlots = await ScheduleTimeSlotService.GetScheduleTimeSlotsByDoctorId(0);

        if(ListOfScheduleTimeSlots != null)
        {
           Console.WriteLine("ListOfScheduleTimeSlots is not null");
        }

        // Add each time slot to the appropriate list
        foreach (ScheduleTimeSlot scheduleTimeSlot in ListOfScheduleTimeSlots)
        {
            switch (scheduleTimeSlot.DayOfWeek)
            {
                case "Monday":
                    MondayList.Add(scheduleTimeSlot);
                    break;
                case "Tuesday":
                    TuesdayList.Add(scheduleTimeSlot);
                    break;
                case "Wednesday":
                    WednesdayList.Add(scheduleTimeSlot);
                    break;
                case "Thursday":
                    ThursdayList.Add(scheduleTimeSlot);
                    break;
                case "Friday":
                    FridayList.Add(scheduleTimeSlot);
                    break;
                case "Saturday":
                    SaturdayList.Add(scheduleTimeSlot);
                    break;
                case "Sunday":
                    SundayList.Add(scheduleTimeSlot);
                    break;
            }
        }

    }
}