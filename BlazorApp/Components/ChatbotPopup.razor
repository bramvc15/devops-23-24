@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@using System.Text.Json
@using BlazorApp.Data
@using BlazorApp.Services
@using BlazorApp.Models
@using BlazorApp.Controllers
@inject DatabaseContext databaseContext
@using Microsoft.AspNetCore.Components
@inject ChatbotService ChatbotService

   <button class="btn" @onclick="ShowModal">@text</button>
   <Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Vraag toevoegen</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Vraag</FieldLabel>
                <TextEdit Placeholder="Vraag die de bezoeker aanklikt" @bind-Text="question" />
            </Field>
            <Field>
                <FieldLabel>Antwoord</FieldLabel>
                <TextEdit Placeholder="Antwoord die de chatbot geeft" @bind-Text="answer" />
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" >Sluit</Button>
            <Button Color="Color.Primary" Clicked="@addQuestion">Voeg toe</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    [Parameter]
    public string text { get; set; }
    
    private Modal? modalRef;

    string? question;
    string? answer;

    [Parameter]
    public ChatBotQuestion? parentQuestion { get; set; }


    void addQuestion() {
        ChatBotQuestion question = new ChatBotQuestion();
        question.Question = this.question;
        question.Answer = this.answer;

        if(parentQuestion != null) {
            ChatbotService.AddFollowUpQuestion(parentQuestion, question);
        } else {
            ChatbotService.AddQuestion(question);
        }
        
        modalRef?.Hide();
    }

    private Task? ShowModal()
    {
        return modalRef?.Show();
    }
}