<RichTextEdit @ref="richTextEditRef" Theme="RichTextEditTheme.Snow" ContentChanged="@OnContentChanged"
    PlaceHolder="Type uw post hier..." ReadOnly="@readOnly" SubmitOnEnter="false" EnterPressed="@OnSave"
    ToolbarPosition="Placement.Bottom">
    <Editor></Editor>
    <Toolbar>
        <RichTextEditToolbarGroup>
            <RichTextEditToolbarButton Action="RichTextEditAction.Bold" />
            <RichTextEditToolbarButton Action="RichTextEditAction.Italic" />
            <RichTextEditToolbarSelect Action="RichTextEditAction.Size">
                <RichTextEditToolbarSelectItem Value="small" />
                <RichTextEditToolbarSelectItem Selected />
                <RichTextEditToolbarSelectItem Value="large" />
                <RichTextEditToolbarSelectItem Value="huge">Very Big
                </RichTextEditToolbarSelectItem>
            </RichTextEditToolbarSelect>
            <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="ordered" />
            <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="bullet" />
        </RichTextEditToolbarGroup>
        <!-- Custom toolbar content -->
        <RichTextEditToolbarGroup Float="Float.End">
            <Button onClick="window.open('https://www.quilljs.com/','quilljs')">
                <Icon Name="IconName.InfoCircle" />
            </Button>
            <Button Clicked="@OnSave">
                <Icon Name="IconName.Save" />
            </Button>
        </RichTextEditToolbarGroup>
    </Toolbar>
</RichTextEdit>

@code {


    @*rich*@

    protected RichTextEdit richTextEditRef;
    protected bool readOnly;
    public string contentAsHtml;
    protected string contentAsDeltaJson;
    public string contentAsText;
    protected string savedContent;

    public async Task OnContentChanged()
    {
        contentAsHtml = await richTextEditRef.GetHtmlAsync();
        contentAsDeltaJson = await richTextEditRef.GetDeltaAsync();
        contentAsText = await richTextEditRef.GetTextAsync();
    }

    public async Task OnSave()
    {
        savedContent = await richTextEditRef.GetHtmlAsync();
        await richTextEditRef.ClearAsync();
    }



    public async Task<string> GetContentAsHtmlAsync()
    {
        return await richTextEditRef.GetHtmlAsync();
    }



}