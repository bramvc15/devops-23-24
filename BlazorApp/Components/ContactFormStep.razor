@using BlazorApp.Services
@using BlazorApp.Models
@using Enums

<EditForm Model="@clientData" OnValidSubmit="@SubmitClientData">
    <DataAnnotationsValidator />
    <div class="contactbox">
        <div class="formbox">
            <div class="coll">
                <div class="la">
                    <label class='formLabel' for="Name">Naam</label>
                </div>
                <div class='formInput'>
                    <InputText id="Name" @bind-Value="clientData.Name" type='text' placeholder='John Doe' />
                    <ValidationMessage For="@(() => clientData.Name)" />
                </div>
                <div class="la">
                    <label class='formLabel' for="Email">E-mail</label>
                </div>
                <div class='formInput'>
                    <InputText id="Email" @bind-Value="clientData.Email" type='text' placeholder='john@mail.com' />
                    <ValidationMessage For="@(() => clientData.Email)" />
                </div>
            </div>
            <div class="coll">
                <div class="la">
                    <label class='formLabel' for="Phone">Telefoon</label>
                </div>
                <div class='formInput'>
                    <InputText id="Phone" @bind-Value="clientData.Phone" type='text' placeholder='0489432312' />
                    <ValidationMessage For="@(() => clientData.Phone)" />
                </div>
                <div class="la">
                    <label class='formLabel' for="birthDate">Geboortedatum</label>
                </div>
                <div class='formInput'>
                    <InputDate id="birthDate" @bind-Value="clientData.BirthDate" />
                    <ValidationMessage For="@(() => clientData.BirthDate)" />
                </div>
            </div>
        </div>
        <div class="btnBox">
            <button type="submit" class="submitBtn">Verzenden</button>
        </div>
    </div>
</EditForm>
@code {
    [Parameter]
    public EventCallback<PatientDTO> OnContactSubmitted { get; set; }

    private ClientData clientData = new ClientData();


    private async Task SubmitClientData()
    {
        PatientDTO patientDTO = new PatientDTO {
            Name = clientData.Name,
            Email = clientData.Email,
            PhoneNumber = clientData.Phone,
            DateOfBirth = clientData.BirthDate,
            Gender = Gender.Male, // placeholder
            BloodType = BloodType.APositive // placeholder
        };
        
        Console.WriteLine(patientDTO.Name + " " + patientDTO.Email + " " + patientDTO.PhoneNumber + " " + patientDTO.DateOfBirth);
        OnContactSubmitted.InvokeAsync(patientDTO);
        //Console.WriteLine(clientData.Name + " " + clientData.Email + " " + clientData.Phone + " " + clientData.BirthDate);
    }
}
