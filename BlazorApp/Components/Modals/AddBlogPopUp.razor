@using Services.CMS;
@using Shared.DTO.CMS;
@using Persistence.Data; 
@inject DatabaseContext databaseContext
@inject BlogService blogService

<div>
    <div class="buttons">
        <Button Color="Color.Primary" Clicked="@ShowModal">Voeg blog toe</Button>
    </div>
    <Modal @ref="modalRef">
        <ModalContent Centered>
            <ModalHeader>
                <ModalTitle>Blog toevoegen</ModalTitle>
                <CloseButton />
            </ModalHeader>
            <ModalBody>
                <Field>
                    <FieldLabel>Titel</FieldLabel>
                    <TextEdit Placeholder="Geef titel..." @bind-Text="newTitle" />
                </Field>
                <Field>
                    <FieldLabel>Text</FieldLabel>
                    @* rich *@
                    <RichTextEditor @ref="richTextEditRef" />
                </Field>
                <Field>
                    <FieldLabel>Afbeelding</FieldLabel>
                    <TextEdit Placeholder="Geef afbeelding link..." @bind-Text="newImage" />
                </Field>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="@HideModal">Sluit</Button>
                <Button Color="Color.Primary" Clicked="@UpdateTitle">Opslaan</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
</div>

@code {
    protected RichTextEditor? richTextEditRef;
    protected string? content;
    string? newTitle;
    string? newImage;
    string? plainTextContent;

    private Modal? modalRef;

    private Task? ShowModal()
    {
        return modalRef?.Show();
    }

    private Task? HideModal()
    {
        return modalRef?.Hide();
    }

    private async Task UpdateTitle()
    {
        plainTextContent = richTextEditRef?.contentAsText;
        content = richTextEditRef?.contentAsHtml;
        BlogDTO newBlog = new()
        {
            Title = newTitle,
            Text = content,
            ImageLink = newImage
        };
        await blogService.CreateBlog(newBlog);
        modalRef?.Hide();
    }
}