@using Models
@using Microsoft.AspNetCore.Components;

<div class="template-wrap d-flex justify-content-between">
    @{
        var data = Context as AppointmentData;
        var StartHour = data.StartTime.ToString("HH:mm");
        var EndHour = data.EndTime.ToString("HH:mm");
        <div @onclick="ShowModal" class="subject"><b>@StartHour - @EndHour</b> @data.Subject</div>

        @if(data.AppointmentDTO != null) {
            <Modal @ref="modalRef" class="modal">
                <ModalContent Centered>
                    <ModalHeader>
                        <ModalTitle>@StartHour - @EndHour</ModalTitle>
                        <CloseButton />
                    </ModalHeader>
                    <ModalBody>
                        <div class="body">
                            <b>PatiÃ«nt:</b> @data.Subject<br />
                            <b>Reden:</b> @data.AppointmentDTO.Reason<br />
                            <b>Opmerking:</b> @data.AppointmentDTO.Note<br />
                            <b>Type:</b> @data.TimeSlotDTO.AppointmentType<br />
                        </div>
                        <Field>
                            <FieldLabel>Titel</FieldLabel>
                            <input type="text" class="form-control" @bind="@data.Subject" />
                        </Field>
                    </ModalBody>
                    <ModalFooter>
                        <button class="btn btn-danger" @onclick="HandleCancelAppointment">Annuleer</button>
                    </ModalFooter>
                </ModalContent>
            </Modal>
        }
    }
</div>

@code {
    [Parameter]
    public object Context { get; set; }

    [Parameter]
    public EventCallback<int> OnDeleteAppointment { get; set; }

    private Modal? modalRef;
    private string note;

    private Task? ShowModal()
    {
        if(modalRef == null)
            return Task.CompletedTask;
        return modalRef?.Show();
    }

    protected async Task HandleCancelAppointment()
    {
        await OnDeleteAppointment.InvokeAsync((Context as AppointmentData).Id);
    }

    protected override void OnInitialized()
    {
        var data = Context as AppointmentData;
        if(data.AppointmentDTO != null)
            note = data.AppointmentDTO.Note;
    }
}

<style>
    .modal {
        color: black;
    }
</style>