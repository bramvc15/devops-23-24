@using Services.CMS;
@using Shared.DTO.CMS;
@using Persistence.Data;
@inject DatabaseContext databaseContext
@using Microsoft.AspNetCore.Components;
@inject ChatbotService chatbotService


<div class="textBubble-@(Type == "bot" ? "bot" : "user")">
    <div>
        <div class="content">
            @if (ChatbotQuestionsList == null || visible)
            {
                <span class="message" data-test-id="message">
                     @((MarkupString)Message)
                </span>
                if (Image != null)
                {
                    <img src="@Image" alt="typing" />
                }
            }
            else
            {
                @foreach (var question in ChatbotQuestionsList)
                {
                    <button class="question" data-test-id="question" @onclick="() => DisplayQuestion(question)">
                        @question.Question
                    </button>
                }
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Message { get; set; }

    [Parameter]
    public string Type { get; set; }

    [Parameter]
    public string? Image { get; set; }

    [Parameter]
    public IEnumerable<ChatBotQuestionDTO> ChatbotQuestionsList { get; set; }


    private bool visible = false;

    private bool isCollapsed = false;

    [Parameter]
    public EventCallback<ChatBotQuestionDTO> QuestionClicked { get; set; }

    public async Task DisplayQuestion(ChatBotQuestionDTO question)
    {
        Message = question.Question;
        visible = true;
        await QuestionClicked.InvokeAsync(question);
        StateHasChanged();
    }
}